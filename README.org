* Introduction

This will be an evolving tutorial, representing what I know, and
presumably at the end of the document, where I'm stuck.

There are at least two good spots to study om-next,
[[https://github.com/omcljs/om/wiki/Quick-Start-(om.next)][the
quick-start]] on the wiki, and
[[https://github.com/awkay/om-tutorial][Tony Kay's devcards tutorial]].
Even after reading/doing those sources, I was still too confused to
build anything.  This document will outline where I'm still confused.

* App Database

Om next has a concept of a properly formed local database format.
This should be a clojure map.  Storing simple data like the current
users name should look like this:

#+BEGIN_SRC clojure
  {:current/user {:user/name "Fenton"}}
#+END_SRC

I'm not sure how important it is to namespace like: ~:current/user~
versus ~:current-user~, but I think it is a best practice to help keep
your application data more organized.

The absolutely essential part is you have a map with a key to another
map.

Now lets test working with this database, create a ~*.cljc~ file with
the following contents and fire up your *CLOJURE* not clojure-script
REPL.  *NOTE:* feel free to use whatever namespace you want to,
~omn1,core2~ is tangential information to the lesson.

#+BEGIN_SRC clojure
(ns omn1.core2
  (:require [om.next :as om]))
(def app-state (atom {:current/user {:user/name "Fenton"}}))
#+END_SRC

Now in your REPL execute the following command:

#+BEGIN_SRC clojure
omn1.core2> (om/db->tree [:current/user] @app-state @app-state)
#:current{:user #:user{:name "Fenton"}}
#+END_SRC

The ~#: ... {~ syntax is just the namespacing representation.  This is
equivalent to:

#+BEGIN_SRC clojure
{:current/user {:user/name "Fenton"}}
#+END_SRC

** Explanation

We have seen how to store *singleton'ish* information.  We use a map.
We have also seen how to extract our information, the key here is the
array with the keyword in it:

#+BEGIN_SRC clojure
  [:current/user]
#+END_SRC

This is the first introduction to what we call the *Query Syntax*.
Here is a reference to
[[https://awkay.github.io/om-tutorial/#!/om_tutorial.D_Queries][query
syntax].

So lets add some more interesting data.  Lets add a list of things.

#+BEGIN_SRC clojure
(def app-state (atom {:current/user {:user/name "Fenton"}
                      :my-cars [{:make "Toyota"
                                 :model "Tacoma"
                                 :year "2013"}
                                {:make "BMW"
                                 :model "325xi"
                                 :year "2001"}]}))
#+END_SRC

Access it the same old way:

#+BEGIN_SRC clojure
omn1.core2> (om/db->tree [:my-cars] @app-state @app-state)
{:my-cars
 [{:make "Toyota", :model "Tacoma", :year "2013"}
  {:make "BMW", :model "325xi", :year "2001"}]}
omn1.core2> 
#+END_SRC
